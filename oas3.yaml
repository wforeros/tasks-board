openapi: 3.0.0
info:
  title: pro-tool-loan
  description: Api Web
  version: 1.0.0
servers:
  - url: http://localhost:3000/v1
    description: 'Local server'
tags:
  - name: users
    description: Users
paths:
  # USERS
  /users:
    get:
      tags:
        - users
      summary: get all users
      description: Get users based on filters
      operationId: users:get-all
      parameters:
        - name: limit
          in: query
          schema:
            type: number
            example: 0
        - name: offset
          in: query
          schema:
            type: number
            example: 0
        - name: email
          in: query
          schema:
            type: string
            example: 'xxxx@mail.com'
          'allowReserved': true
      responses:
        '200':
          description: result = drivers-api-schema
          content:
            application/json:
              schema:
                $ref: '#/components/responses/list_response'
        '400':
          description: Not found users with provided id
          content:
            application/json:
              schema:
                $ref: '#/components/responses/error'
        '403':
          description: 'Forbiden'
          content:
            application/json:
              schema:
                $ref: '#/components/responses/401_unauthorized'
        '404':
          description: Resource not found
          content:
            application/json:
              schema:
                $ref: '#/components/responses/404_not_found'
    post:
      tags:
        - 'users'
      summary: 'Create a new user'
      description: 'Create a new user'
      operationId: 'users:create'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/users-create-one'
      responses:
        '200':
          description: 'User created'
          content:
            application/json:
              schema:
                $ref: '#/components/responses/response'
        '400':
          description: 'Bad request'
          content:
            application/json:
              schema:
                $ref: '#/components/responses/error'
        '401':
          description: 'Unauthorized'
          content:
            application/json:
              schema:
                $ref: '#/components/responses/401_unauthorized'
        '404':
          description: 'Resource not found'
          content:
            application/json:
              schema:
                $ref: '#/components/responses/404_not_found'

components:
  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
  schemas:
    #RESPONSES
    api_response:
      title: ApiResponse
      required:
        - result
        - status
      type: object
      properties:
        result:
          type: object
          description: Object according to the requested resource
        status:
          type: integer
          description: HTTP code status
          example: 200
    api_error:
      title: ApiError
      required:
        - message
        - code
      type: object
      properties:
        message:
          type: string
          description: Message that describes the error
        code:
          type: integer
          description: Code of error
        metadata:
          type: object
          description: More info of error
    list_reponse:
      title: ListResponse
      required:
        - items
        - total
      type: object
      properties:
        items:
          type: array
          items:
            type: object
          description: response elements according to the resource
        total:
          type: integer
          description: total of items saved
    api_list_reponse:
      title: ApiListResponse
      required:
        - result
        - status
      type: object
      properties:
        result:
          $ref: '#/components/schemas/list_reponse'
        status:
          type: integer
          description: HTTP code status
    users-create-one:
      title: UserCreateOne
      required:
        - email
        - password
      type: object
      properties:
        name:
          type: string
          description: User name
          example: 'John Doe'
        email:
          type: string
          description: User email
          example: 'example@test.com'
        date_of_birth:
          type: string
          description: User date of birth
          example: '1990-01-01'
        password:
          type: string
          description: User password
          example: '123456'

  responses:
    response:
      $ref: '#/components/schemas/api_response'
    list_response:
      $ref: '#/components/schemas/api_list_reponse'
    error:
      $ref: '#/components/schemas/api_error'
    401_unauthorized:
      $ref: '#/components/schemas/api_error'
    403_forbidden:
      $ref: '#/components/schemas/api_error'
    404_not_found:
      $ref: '#/components/schemas/api_error'
